name: Build and Test

# - PR branches: test â†’ build (validate only, no push)
# - Main branch releases are handled by release.yml workflow
# - This workflow focuses on testing and validation

on:
  pull_request:
    branches:
      - main

env:
  GCP_IMAGE_PATH: europe-west2-docker.pkg.dev/uk-vm-00001/resume-builder
  GCP_IMAGE_NAME: easyfreeresume-app
  GCP_IMAGE: europe-west2-docker.pkg.dev/uk-vm-00001/resume-builder/easyfreeresume-app

jobs:
  # Frontend Tests
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: resume-builder-ui

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: resume-builder-ui/package-lock.json

      - name: Install dependencies
        run: npm ci

      # - name: Run ESLint
      #   run: npm run lint

      - name: Run tests with coverage
        run: npm run coverage

  # Backend Tests - TODO: Add backend tests
  # test-backend:
  #   name: Backend Tests
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.13'
  #         cache: 'pip'
  #
  #     - name: Install uv
  #       run: pip install uv
  #
  #     - name: Install dependencies
  #       run: uv pip install --system -r requirements.txt
  #
  #     - name: Install test dependencies
  #       run: |
  #         uv pip install --system pytest pytest-cov pytest-flask ruff
  #
  #     - name: Run Python linting
  #       run: ruff check .
  #
  #     - name: Run backend tests
  #       run: pytest --cov=. --cov-report=xml --cov-report=html -v

  # Build Docker image (runs after tests pass)
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test-frontend]  # TODO: Add test-backend when backend tests exist
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GCP_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      # Build Docker image for validation (no push for PRs)
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      - name: Image digest
        if: success()
        run: "echo \"Built image with digest: ${{ steps.build.outputs.digest }}\""

